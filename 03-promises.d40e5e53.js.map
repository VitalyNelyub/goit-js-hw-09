{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAG9BC,GAFYF,SAASC,cAAc,uBAEjBD,SAASC,cAAc,sBAEzCE,GADiBH,SAASC,cAAc,oBACbD,SAASC,cAAc,uBA8BxD,SAASG,EAAcC,EAAUC,GAC/BC,YAAW,KACaC,KAAKC,SAAW,IAEpCC,EAAAb,GAASc,OAAOC,QAAQ,uBAAqBP,QAAiBC,OAC5DO,QAAMC,IAAI,uBAAqBT,QAAiBC,SAElDI,EAAAb,GAASc,OAAOI,QAAQ,sBAAoBV,QAAiBC,OAC3DO,QAAMC,IAAI,sBAAoBT,QAAiBC,O,GAElDA,E,CArCLP,EAAKiB,iBAAiB,UAStB,SAAoBC,GAGNf,EAAgBgB,MAG5BD,EAAEE,iBACF,IAAK,IAAIC,EAAI,EAAGA,EAAIjB,EAAyBe,MAAOE,IAAK,CACvD,IAAIf,EAAWe,EACfP,QAAQC,IAAIT,GACZ,IAAIC,EAAQJ,EAAgBgB,MAC5BL,QAAQC,IAAIR,GACZF,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst btnSubmit = document.querySelector('button[type=submit]');\n\nconst inputFirstDelay = document.querySelector('input[name=delay]');\nconst inputStepDelay = document.querySelector('input[name=step]');\nconst inputAmountCreatePromise = document.querySelector('input[name=amount]');\n\n// form.addEventListener('change', dataFotmInput);\nform.addEventListener('submit', submitForm);\n\n// let inputValues = [];\n\n// function dataFotmInput(e) {\n//   inputValues.push(e.target.value);\n//   console.log(e.target.value);\n// }\n\nfunction submitForm(e) {\n  // console.log(e);\n  // console.log(inputFirstDelay.value);\n  let delay = inputFirstDelay.value;\n  // console.log(inputStepDelay.value);\n  // console.log(inputAmountCreatePromise.value);\n  e.preventDefault();\n  for (let i = 1; i < inputAmountCreatePromise.value; i++) {\n    let position = i;\n    console.log(position);\n    let delay = inputFirstDelay.value;\n    console.log(delay);\n    createPromise();\n  }\n}\n\n// console.log(inputValues);\n\nfunction createPromise(position, delay) {\n  setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  }, delay);\n}\n\n// function createPromise(position, delay) {\n//   setTimeout(() => {\n//     const shouldResolve = Math.random() > 0.3;\n//     if (shouldResolve) {\n//       resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     } else {\n//       reject(`❌ Rejected promise ${position} in ${delay}ms`);\n//     }\n//   }, delay);\n// }\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$inputFirstDelay","$47d4ff9957288465$var$inputAmountCreatePromise","$47d4ff9957288465$var$createPromise","position","delay","setTimeout","Math","random","$parcel$interopDefault","Notify","success","console","log","warning","addEventListener","e","value","preventDefault","i"],"version":3,"file":"03-promises.d40e5e53.js.map"}