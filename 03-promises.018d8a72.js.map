{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAG9BC,GAFYF,SAASC,cAAc,uBAEjBD,SAASC,cAAc,sBAEzCE,GADiBH,SAASC,cAAc,oBACbD,SAASC,cAAc,uBA8BxD,SAASG,EAAcC,EAAUC,GAC/BC,YAAW,WACaC,KAAKC,SAAW,IAEpCC,EAAAb,GAASc,OAAOC,QAAQ,uBAAwCC,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OACpEQ,QAAMC,IAAI,uBAAwCF,OAAfR,EAAS,QAAYQ,OAANP,EAAM,SAE1DI,EAAAb,GAASc,OAAOK,QAAQ,sBAAuCH,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OACnEQ,QAAMC,IAAI,sBAAuCF,OAAfR,EAAS,QAAYQ,OAANP,EAAM,O,GAE1DA,E,CArCLP,EAAKkB,iBAAiB,UAStB,SAAoBC,GAGNhB,EAAgBiB,MAG5BD,EAAEE,iBACF,IAAK,IAAIC,EAAI,EAAGA,EAAIlB,EAAyBgB,MAAOE,IAAK,CACvD,IAAIhB,EAAWgB,EACfP,QAAQC,IAAIV,GACZ,IAAIiB,EAAQpB,EAAgBiB,MAC5BL,QAAQC,IAAIO,GACZlB,EAAcC,EAAUiB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst btnSubmit = document.querySelector('button[type=submit]');\n\nconst inputFirstDelay = document.querySelector('input[name=delay]');\nconst inputStepDelay = document.querySelector('input[name=step]');\nconst inputAmountCreatePromise = document.querySelector('input[name=amount]');\n\n// form.addEventListener('change', dataFotmInput);\nform.addEventListener('submit', submitForm);\n\n// let inputValues = [];\n\n// function dataFotmInput(e) {\n//   inputValues.push(e.target.value);\n//   console.log(e.target.value);\n// }\n\nfunction submitForm(e) {\n  // console.log(e);\n  // console.log(inputFirstDelay.value);\n  let delay = inputFirstDelay.value;\n  // console.log(inputStepDelay.value);\n  // console.log(inputAmountCreatePromise.value);\n  e.preventDefault();\n  for (let i = 1; i < inputAmountCreatePromise.value; i++) {\n    let position = i;\n    console.log(position);\n    let delay = inputFirstDelay.value;\n    console.log(delay);\n    createPromise(position, delay);\n  }\n}\n\n// console.log(inputValues);\n\nfunction createPromise(position, delay) {\n  setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  }, delay);\n}\n\n// function createPromise(position, delay) {\n//   setTimeout(() => {\n//     const shouldResolve = Math.random() > 0.3;\n//     if (shouldResolve) {\n//       resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     } else {\n//       reject(`❌ Rejected promise ${position} in ${delay}ms`);\n//     }\n//   }, delay);\n// }\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputFirstDelay","$ce04d3a99e08e73b$var$inputAmountCreatePromise","$ce04d3a99e08e73b$var$createPromise","position","delay","setTimeout","Math","random","$parcel$interopDefault","Notify","success","concat","console","log","warning","addEventListener","e","value","preventDefault","i","delay1"],"version":3,"file":"03-promises.018d8a72.js.map"}