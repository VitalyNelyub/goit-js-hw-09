{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAkBF,SAASC,cAAc,qBACzCE,EAAiBH,SAASC,cAAc,oBACxCG,EAA2BJ,SAASC,cAAc,sBAiBxD,SAASI,EAAcC,EAAUC,GAC/BC,YAAW,KACaC,KAAKC,SAAW,GAEpCC,EAAAd,GAASe,OAAOC,QAAQ,uBAAqBP,QAAiBC,OAE9DI,EAAAd,GAASe,OAAOE,QAAQ,sBAAoBR,QAAeC,MAAU,GAEtEA,E,CAvBLR,EAAKgB,iBAAiB,UAEtB,SAAoBC,GAClB,IAAIT,EAAQL,EAAgBe,MAE5BD,EAAEE,iBAEF,IAAK,IAAIC,EAAI,EAAGA,GAAKf,EAAyBa,MAAOE,IAAK,CAGxDd,EAFec,EAESZ,GACxBA,EAAQa,OAAOb,GAASa,OAAOjB,EAAec,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst inputFirstDelay = document.querySelector('input[name=delay]');\nconst inputStepDelay = document.querySelector('input[name=step]');\nconst inputAmountCreatePromise = document.querySelector('input[name=amount]');\n\nform.addEventListener('submit', submitForm);\n\nfunction submitForm(e) {\n  let delay = inputFirstDelay.value;\n\n  e.preventDefault();\n\n  for (let i = 1; i <= inputAmountCreatePromise.value; i++) {\n    let position = i;\n\n    createPromise(position, delay);\n    delay = Number(delay) + Number(inputStepDelay.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  }, delay);\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$inputFirstDelay","$47d4ff9957288465$var$inputStepDelay","$47d4ff9957288465$var$inputAmountCreatePromise","$47d4ff9957288465$var$createPromise","position","delay","setTimeout","Math","random","$parcel$interopDefault","Notify","success","warning","addEventListener","e","value","preventDefault","i","Number"],"version":3,"file":"03-promises.ad4e9ce4.js.map"}